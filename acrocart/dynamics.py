"""
Dynamics setup of an acrocart system.
See Dynamics class docstring for more details.

"""
from __future__ import division
import numpy as np; npl = np.linalg


class Dynamics(object):
    """
    Class for the dynamics of an acrocart system.
    State: q == [pos, ang1, ang2, vel, angvel1, angvel2]
    Input: u == force_on_cart
    (angs are 0 when hanging poles and pi when upright poles)

    l1:         scalar first pole length
    l2:         scalar second pole length
    m:          tuple of cart and pole inertias
    b:          tuple of rail and joint dampings
    g:          scalar downwards gravity
    rail_lims:  tuple of (min, max) limits on cart position
    force_lims: tuple of (min, max) limits for push-force on cart

    """
    def __init__(self, l1=1, l2=1, m=(0.3, 0.2, 0.2), b=(0.2, 0.01, 0.01), g=9.81, rail_lims=(-3, 3), force_lims=(-20, 20)):
        self.l1 = np.float64(l1)
        self.l2 = np.float64(l2)
        self.m = np.array(m, dtype=np.float64)
        self.b = np.array(b, dtype=np.float64)
        self.g = np.float64(g)
        self.rail_lims = np.array(rail_lims, dtype=np.float64)
        self.force_lims = np.array(force_lims, dtype=np.float64)

        # System dimensions
        self.n_u = 1  # inputs
        self.n_d = 3  # degrees of freedom
        self.n_q = 2*self.n_d  # states

        # Verify that f and F correspond
        Q = np.random.sample((3, self.n_q))
        U = np.random.sample((3, self.n_u))
        for q, u, qdot, A, B in zip(Q, U, self.F(Q, U), *self.Linearize(Q, U)):
            if not np.array_equal(self.f(q, u), qdot):
                raise AssertionError("Invalid Dynamics class source-code; f and F definitions don't correspond!")
            Al, Bl = self.linearize(q, u)
            if not np.array_equal(Al, A) and np.array_equal(Bl, B):
                raise AssertionError("Invalid Dynamics class source-code; linearize and Linearize definitions don't correspond!")

    def step(self, q, u, dt, disturb=0.0):
        """
        Integrates acrocart dynamics one timestep by partial-Verlet method, q_next = step(q, u, dt).
        Applies rail and force constraints.

        q:       array current state [pos, ang1, ang2, vel, angvel1, angvel2]
        u:       scalar current input force on cart
        dt:      timestep for integration
        disturb: optional scalar external disturbance force on cart

        """
        q = np.array(q, dtype=np.float64)

        # Enforce input saturation and add disturbance
        u_act = np.clip(np.float64(u), self.force_lims[0], self.force_lims[1]) + disturb

        # Get numpy views of pose and twist, and compute accel
        pose = q[:self.n_d]
        twist = q[self.n_d:]
        accel = self.f(q, u_act)[self.n_d:]

        # Partial-Verlet integrate state and enforce rail constraints
        pose_next = pose + dt*twist + 0.5*(dt**2)*accel
        if pose_next[0] < self.rail_lims[0]:
            pose_next[0] = self.rail_lims[0]
            a1, a2 = self.f(q, 0.0)[4:]
            twist_next = np.array([0.0, twist[1]+dt*a1, twist[2]+dt*a2])
        elif pose_next[0] > self.rail_lims[1]:
            pose_next[0] = self.rail_lims[1]
            a1, a2 = self.f(q, 0.0)[4:]
            twist_next = np.array([0.0, twist[1]+dt*a1, twist[2]+dt*a2])
        else:
            twist_next = twist + dt*accel

        # Return next state = [pose, twist]
        pose_next[1:3] = np.mod(pose_next[1:3]+np.pi, 2*np.pi) - np.pi  # unwrap angles onto [-pi, pi]
        return np.append(pose_next, twist_next)

    def f(self, q, u):
        """
        Acrocart continuous-time design-dynamics, qdot = f(q, u).
        Ignores any rail or force limits.

        q: array state [pos, ang1, ang2, vel, angvel1, angvel2]
        u: scalar input force on cart

        """
        # Memoize
        sq1, cq1 = np.sin(q[1]), np.cos(q[1])
        sq2, cq2 = np.sin(q[2]), np.cos(q[2])
        sq12, cq12 = np.sin(q[1] - q[2]), np.cos(q[1] - q[2])

        # Analytical dynamics in state-space form
        return np.array([q[3],
                         q[4],
                         q[5],
                         (self.l1*self.l2*(-4*self.m[1] + 9*self.m[2]*cq12**2 - 12*self.m[2])*(-2*self.b[0]*q[3] + self.l1*self.m[1]*sq1*q[4]**2 + 2*self.l1*self.m[2]*sq1*q[4]**2 + self.l2*self.m[2]*sq2*q[5]**2 + 2*u) + 3*self.l1*(3*(self.m[1] + 2*self.m[2])*cq12*cq1 - 2*(self.m[1] + 3*self.m[2])*cq2)*(2*self.b[2]*q[5] + self.g*self.l2*self.m[2]*sq2 - self.l1*self.l2*self.m[2]*sq12*q[4]**2) + 3*self.l2*(3*self.m[2]*cq12*cq2 - 2*(self.m[1] + 2*self.m[2])*cq1)*(2*self.b[1]*q[4] + self.g*self.l1*self.m[1]*sq1 + 2*self.g*self.l1*self.m[2]*sq1 + self.l1*self.l2*self.m[2]*sq12*q[5]**2))/(2*self.l1*self.l2*(-9*self.m[2]*(self.m[1] + 2*self.m[2])*cq12*cq1*cq2 + 3*self.m[2]*(self.m[1] + 3*self.m[2])*cq2**2 + 9*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*cq12**2 + 3*(self.m[1] + 2*self.m[2])**2*cq1**2 - 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2]))),
                         3*(-self.l1*self.l2*(3*self.m[2]*cq12*cq2 - 2*(self.m[1] + 2*self.m[2])*cq1)*(-2*self.b[0]*q[3] + self.l1*self.m[1]*sq1*q[4]**2 + 2*self.l1*self.m[2]*sq1*q[4]**2 + self.l2*self.m[2]*sq2*q[5]**2 + 2*u) - 3*self.l1*(-(self.m[1] + 2*self.m[2])*cq1*cq2 + 2*(self.m[0] + self.m[1] + self.m[2])*cq12)*(2*self.b[2]*q[5] + self.g*self.l2*self.m[2]*sq2 - self.l1*self.l2*self.m[2]*sq12*q[4]**2) + self.l2*(4*self.m[0] + 4*self.m[1] + 3*self.m[2]*sq2**2 + self.m[2])*(2*self.b[1]*q[4] + self.g*self.l1*self.m[1]*sq1 + 2*self.g*self.l1*self.m[2]*sq1 + self.l1*self.l2*self.m[2]*sq12*q[5]**2))/(2*self.l1**2*self.l2*(-9*self.m[2]*(self.m[1] + 2*self.m[2])*cq12*cq1*cq2 + 3*self.m[2]*(self.m[1] + 3*self.m[2])*cq2**2 + 9*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*cq12**2 + 3*(self.m[1] + 2*self.m[2])**2*cq1**2 - 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2]))),
                         3*(-self.l1*self.l2*self.m[2]*(3*(self.m[1] + 2*self.m[2])*cq12*cq1 - 2*(self.m[1] + 3*self.m[2])*cq2)*(-2*self.b[0]*q[3] + self.l1*self.m[1]*sq1*q[4]**2 + 2*self.l1*self.m[2]*sq1*q[4]**2 + self.l2*self.m[2]*sq2*q[5]**2 + 2*u) + self.l1*(-3*(self.m[1] + 2*self.m[2])**2*cq1**2 + 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2]))*(2*self.b[2]*q[5] + self.g*self.l2*self.m[2]*sq2 - self.l1*self.l2*self.m[2]*sq12*q[4]**2) - 3*self.l2*self.m[2]*(-(self.m[1] + 2*self.m[2])*cq1*cq2 + 2*(self.m[0] + self.m[1] + self.m[2])*cq12)*(2*self.b[1]*q[4] + self.g*self.l1*self.m[1]*sq1 + 2*self.g*self.l1*self.m[2]*sq1 + self.l1*self.l2*self.m[2]*sq12*q[5]**2))/(2*self.l1*self.l2**2*self.m[2]*(-9*self.m[2]*(self.m[1] + 2*self.m[2])*cq12*cq1*cq2 + 3*self.m[2]*(self.m[1] + 3*self.m[2])*cq2**2 + 9*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*cq12**2 + 3*(self.m[1] + 2*self.m[2])**2*cq1**2 - 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2])))])

    def F(self, Q, U):
        """
        Vectorized version of acrocart continuous-time design-dynamics, Qdot = F(Q, U).
        Ignores any rail or force limits.

        Q: array N-by-n_q state timeseries
        U: array N-by-n_u input timeseries

        """
        # Memoize
        sQ1, cQ1 = np.sin(Q[:, 1]), np.cos(Q[:, 1])
        sQ2, cQ2 = np.sin(Q[:, 2]), np.cos(Q[:, 2])
        sQ12, cQ12 = np.sin(Q[:, 1] - Q[:, 2]), np.cos(Q[:, 1] - Q[:, 2])

        # Analytical dynamics in state-space form
        return np.column_stack((Q[:, 3],
                                Q[:, 4],
                                Q[:, 5],
                                (self.l1*self.l2*(-4*self.m[1] + 9*self.m[2]*cQ12**2 - 12*self.m[2])*(-2*self.b[0]*Q[:, 3] + self.l1*self.m[1]*sQ1*Q[:, 4]**2 + 2*self.l1*self.m[2]*sQ1*Q[:, 4]**2 + self.l2*self.m[2]*sQ2*Q[:, 5]**2 + 2*U[:, 0]) + 3*self.l1*(3*(self.m[1] + 2*self.m[2])*cQ12*cQ1 - 2*(self.m[1] + 3*self.m[2])*cQ2)*(2*self.b[2]*Q[:, 5] + self.g*self.l2*self.m[2]*sQ2 - self.l1*self.l2*self.m[2]*sQ12*Q[:, 4]**2) + 3*self.l2*(3*self.m[2]*cQ12*cQ2 - 2*(self.m[1] + 2*self.m[2])*cQ1)*(2*self.b[1]*Q[:, 4] + self.g*self.l1*self.m[1]*sQ1 + 2*self.g*self.l1*self.m[2]*sQ1 + self.l1*self.l2*self.m[2]*sQ12*Q[:, 5]**2))/(2*self.l1*self.l2*(-9*self.m[2]*(self.m[1] + 2*self.m[2])*cQ12*cQ1*cQ2 + 3*self.m[2]*(self.m[1] + 3*self.m[2])*cQ2**2 + 9*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*cQ12**2 + 3*(self.m[1] + 2*self.m[2])**2*cQ1**2 - 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2]))),
                                3*(-self.l1*self.l2*(3*self.m[2]*cQ12*cQ2 - 2*(self.m[1] + 2*self.m[2])*cQ1)*(-2*self.b[0]*Q[:, 3] + self.l1*self.m[1]*sQ1*Q[:, 4]**2 + 2*self.l1*self.m[2]*sQ1*Q[:, 4]**2 + self.l2*self.m[2]*sQ2*Q[:, 5]**2 + 2*U[:, 0]) - 3*self.l1*(-(self.m[1] + 2*self.m[2])*cQ1*cQ2 + 2*(self.m[0] + self.m[1] + self.m[2])*cQ12)*(2*self.b[2]*Q[:, 5] + self.g*self.l2*self.m[2]*sQ2 - self.l1*self.l2*self.m[2]*sQ12*Q[:, 4]**2) + self.l2*(4*self.m[0] + 4*self.m[1] + 3*self.m[2]*sQ2**2 + self.m[2])*(2*self.b[1]*Q[:, 4] + self.g*self.l1*self.m[1]*sQ1 + 2*self.g*self.l1*self.m[2]*sQ1 + self.l1*self.l2*self.m[2]*sQ12*Q[:, 5]**2))/(2*self.l1**2*self.l2*(-9*self.m[2]*(self.m[1] + 2*self.m[2])*cQ12*cQ1*cQ2 + 3*self.m[2]*(self.m[1] + 3*self.m[2])*cQ2**2 + 9*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*cQ12**2 + 3*(self.m[1] + 2*self.m[2])**2*cQ1**2 - 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2]))),
                                3*(-self.l1*self.l2*self.m[2]*(3*(self.m[1] + 2*self.m[2])*cQ12*cQ1 - 2*(self.m[1] + 3*self.m[2])*cQ2)*(-2*self.b[0]*Q[:, 3] + self.l1*self.m[1]*sQ1*Q[:, 4]**2 + 2*self.l1*self.m[2]*sQ1*Q[:, 4]**2 + self.l2*self.m[2]*sQ2*Q[:, 5]**2 + 2*U[:, 0]) + self.l1*(-3*(self.m[1] + 2*self.m[2])**2*cQ1**2 + 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2]))*(2*self.b[2]*Q[:, 5] + self.g*self.l2*self.m[2]*sQ2 - self.l1*self.l2*self.m[2]*sQ12*Q[:, 4]**2) - 3*self.l2*self.m[2]*(-(self.m[1] + 2*self.m[2])*cQ1*cQ2 + 2*(self.m[0] + self.m[1] + self.m[2])*cQ12)*(2*self.b[1]*Q[:, 4] + self.g*self.l1*self.m[1]*sQ1 + 2*self.g*self.l1*self.m[2]*sQ1 + self.l1*self.l2*self.m[2]*sQ12*Q[:, 5]**2))/(2*self.l1*self.l2**2*self.m[2]*(-9*self.m[2]*(self.m[1] + 2*self.m[2])*cQ12*cQ1*cQ2 + 3*self.m[2]*(self.m[1] + 3*self.m[2])*cQ2**2 + 9*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*cQ12**2 + 3*(self.m[1] + 2*self.m[2])**2*cQ1**2 - 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2])))))

    def Linearize(self, Q, U):
        """
        Returns a tuple (list_of_A_matrices, list_of_B_matrices) where A = df/dq(qi, ui) and B = df/du(qi, ui) for all
        the (qi, ui) pairs along the trajectory (Q, U), i.e. a piecewise LTV approximation of F about (Q, U).

        Q: array N-by-n_q state timeseries
        U: array N-by-n_u input timeseries

        """
        # Memoize
        Z = np.zeros(Q.shape[0], dtype=np.float64)
        I = np.ones(Q.shape[0], dtype=np.float64)
        sQ1, cQ1 = np.sin(Q[:, 1]), np.cos(Q[:, 1])
        sQ2, cQ2 = np.sin(Q[:, 2]), np.cos(Q[:, 2])
        sQ12, cQ12 = np.sin(Q[:, 1] - Q[:, 2]), np.cos(Q[:, 1] - Q[:, 2])

        # Stack-up analytical jacobians in a very vectorized manner
        return (np.rollaxis(np.array([[Z, Z, Z, I, Z, Z],
                                 [Z, Z, Z, Z, I, Z],
                                 [Z, Z, Z, Z, Z, I],
                                 [Z, (self.l1*self.l2*(-4*self.m[1] + 9*self.m[2]*cQ12**2 - 12*self.m[2])*(-2*self.b[0]*Q[:, 3] + self.l1*self.m[1]*sQ1*Q[:, 4]**2 + 2*self.l1*self.m[2]*sQ1*Q[:, 4]**2 + self.l2*self.m[2]*sQ2*Q[:, 5]**2 + 2*U[:, 0]) + 3*self.l1*(3*(self.m[1] + 2*self.m[2])*cQ12*cQ1 - 2*(self.m[1] + 3*self.m[2])*cQ2)*(2*self.b[2]*Q[:, 5] + self.g*self.l2*self.m[2]*sQ2 - self.l1*self.l2*self.m[2]*sQ12*Q[:, 4]**2) + 3*self.l2*(3*self.m[2]*cQ12*cQ2 - 2*(self.m[1] + 2*self.m[2])*cQ1)*(2*self.b[1]*Q[:, 4] + self.g*self.l1*self.m[1]*sQ1 + 2*self.g*self.l1*self.m[2]*sQ1 + self.l1*self.l2*self.m[2]*sQ12*Q[:, 5]**2))*(-9*self.m[2]*(self.m[1] + 2*self.m[2])*sQ12*cQ1*cQ2 - 9*self.m[2]*(self.m[1] + 2*self.m[2])*sQ1*cQ12*cQ2 + 18*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*sQ12*cQ12 + 6*(self.m[1] + 2*self.m[2])**2*sQ1*cQ1)/(2*self.l1*self.l2*(-9*self.m[2]*(self.m[1] + 2*self.m[2])*cQ12*cQ1*cQ2 + 3*self.m[2]*(self.m[1] + 3*self.m[2])*cQ2**2 + 9*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*cQ12**2 + 3*(self.m[1] + 2*self.m[2])**2*cQ1**2 - 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2]))**2) + (-3*self.l1**2*self.l2*self.m[2]*(3*(self.m[1] + 2*self.m[2])*cQ12*cQ1 - 2*(self.m[1] + 3*self.m[2])*cQ2)*cQ12*Q[:, 4]**2 - 18*self.l1*self.l2*self.m[2]*(-2*self.b[0]*Q[:, 3] + self.l1*self.m[1]*sQ1*Q[:, 4]**2 + 2*self.l1*self.m[2]*sQ1*Q[:, 4]**2 + self.l2*self.m[2]*sQ2*Q[:, 5]**2 + 2*U[:, 0])*sQ12*cQ12 + self.l1*self.l2*(self.l1*self.m[1]*cQ1*Q[:, 4]**2 + 2*self.l1*self.m[2]*cQ1*Q[:, 4]**2)*(-4*self.m[1] + 9*self.m[2]*cQ12**2 - 12*self.m[2]) + 3*self.l1*(-3*(self.m[1] + 2*self.m[2])*sQ12*cQ1 - 3*(self.m[1] + 2*self.m[2])*sQ1*cQ12)*(2*self.b[2]*Q[:, 5] + self.g*self.l2*self.m[2]*sQ2 - self.l1*self.l2*self.m[2]*sQ12*Q[:, 4]**2) + 3*self.l2*(-3*self.m[2]*sQ12*cQ2 + 2*(self.m[1] + 2*self.m[2])*sQ1)*(2*self.b[1]*Q[:, 4] + self.g*self.l1*self.m[1]*sQ1 + 2*self.g*self.l1*self.m[2]*sQ1 + self.l1*self.l2*self.m[2]*sQ12*Q[:, 5]**2) + 3*self.l2*(3*self.m[2]*cQ12*cQ2 - 2*(self.m[1] + 2*self.m[2])*cQ1)*(self.g*self.l1*self.m[1]*cQ1 + 2*self.g*self.l1*self.m[2]*cQ1 + self.l1*self.l2*self.m[2]*cQ12*Q[:, 5]**2))/(2*self.l1*self.l2*(-9*self.m[2]*(self.m[1] + 2*self.m[2])*cQ12*cQ1*cQ2 + 3*self.m[2]*(self.m[1] + 3*self.m[2])*cQ2**2 + 9*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*cQ12**2 + 3*(self.m[1] + 2*self.m[2])**2*cQ1**2 - 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2]))), (self.l1*self.l2*(-4*self.m[1] + 9*self.m[2]*cQ12**2 - 12*self.m[2])*(-2*self.b[0]*Q[:, 3] + self.l1*self.m[1]*sQ1*Q[:, 4]**2 + 2*self.l1*self.m[2]*sQ1*Q[:, 4]**2 + self.l2*self.m[2]*sQ2*Q[:, 5]**2 + 2*U[:, 0]) + 3*self.l1*(3*(self.m[1] + 2*self.m[2])*cQ12*cQ1 - 2*(self.m[1] + 3*self.m[2])*cQ2)*(2*self.b[2]*Q[:, 5] + self.g*self.l2*self.m[2]*sQ2 - self.l1*self.l2*self.m[2]*sQ12*Q[:, 4]**2) + 3*self.l2*(3*self.m[2]*cQ12*cQ2 - 2*(self.m[1] + 2*self.m[2])*cQ1)*(2*self.b[1]*Q[:, 4] + self.g*self.l1*self.m[1]*sQ1 + 2*self.g*self.l1*self.m[2]*sQ1 + self.l1*self.l2*self.m[2]*sQ12*Q[:, 5]**2))*(9*self.m[2]*(self.m[1] + 2*self.m[2])*sQ12*cQ1*cQ2 - 9*self.m[2]*(self.m[1] + 2*self.m[2])*sQ2*cQ12*cQ1 + 6*self.m[2]*(self.m[1] + 3*self.m[2])*sQ2*cQ2 - 18*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*sQ12*cQ12)/(2*self.l1*self.l2*(-9*self.m[2]*(self.m[1] + 2*self.m[2])*cQ12*cQ1*cQ2 + 3*self.m[2]*(self.m[1] + 3*self.m[2])*cQ2**2 + 9*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*cQ12**2 + 3*(self.m[1] + 2*self.m[2])**2*cQ1**2 - 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2]))**2) + (-3*self.l1*self.l2**2*self.m[2]*(3*self.m[2]*cQ12*cQ2 - 2*(self.m[1] + 2*self.m[2])*cQ1)*cQ12*Q[:, 5]**2 + self.l1*self.l2**2*self.m[2]*(-4*self.m[1] + 9*self.m[2]*cQ12**2 - 12*self.m[2])*cQ2*Q[:, 5]**2 + 18*self.l1*self.l2*self.m[2]*(-2*self.b[0]*Q[:, 3] + self.l1*self.m[1]*sQ1*Q[:, 4]**2 + 2*self.l1*self.m[2]*sQ1*Q[:, 4]**2 + self.l2*self.m[2]*sQ2*Q[:, 5]**2 + 2*U[:, 0])*sQ12*cQ12 + 3*self.l1*(3*(self.m[1] + 2*self.m[2])*sQ12*cQ1 + 2*(self.m[1] + 3*self.m[2])*sQ2)*(2*self.b[2]*Q[:, 5] + self.g*self.l2*self.m[2]*sQ2 - self.l1*self.l2*self.m[2]*sQ12*Q[:, 4]**2) + 3*self.l1*(3*(self.m[1] + 2*self.m[2])*cQ12*cQ1 - 2*(self.m[1] + 3*self.m[2])*cQ2)*(self.g*self.l2*self.m[2]*cQ2 + self.l1*self.l2*self.m[2]*cQ12*Q[:, 4]**2) + 3*self.l2*(3*self.m[2]*sQ12*cQ2 - 3*self.m[2]*sQ2*cQ12)*(2*self.b[1]*Q[:, 4] + self.g*self.l1*self.m[1]*sQ1 + 2*self.g*self.l1*self.m[2]*sQ1 + self.l1*self.l2*self.m[2]*sQ12*Q[:, 5]**2))/(2*self.l1*self.l2*(-9*self.m[2]*(self.m[1] + 2*self.m[2])*cQ12*cQ1*cQ2 + 3*self.m[2]*(self.m[1] + 3*self.m[2])*cQ2**2 + 9*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*cQ12**2 + 3*(self.m[1] + 2*self.m[2])**2*cQ1**2 - 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2]))), -self.b[0]*(-4*self.m[1] + 9*self.m[2]*cQ12**2 - 12*self.m[2])/(-9*self.m[2]*(self.m[1] + 2*self.m[2])*cQ12*cQ1*cQ2 + 3*self.m[2]*(self.m[1] + 3*self.m[2])*cQ2**2 + 9*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*cQ12**2 + 3*(self.m[1] + 2*self.m[2])**2*cQ1**2 - 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2])), (6*self.b[1]*self.l2*(3*self.m[2]*cQ12*cQ2 - 2*(self.m[1] + 2*self.m[2])*cQ1) - 6*self.l1**2*self.l2*self.m[2]*(3*(self.m[1] + 2*self.m[2])*cQ12*cQ1 - 2*(self.m[1] + 3*self.m[2])*cQ2)*sQ12*Q[:, 4] + self.l1*self.l2*(2*self.l1*self.m[1]*sQ1*Q[:, 4] + 4*self.l1*self.m[2]*sQ1*Q[:, 4])*(-4*self.m[1] + 9*self.m[2]*cQ12**2 - 12*self.m[2]))/(2*self.l1*self.l2*(-9*self.m[2]*(self.m[1] + 2*self.m[2])*cQ12*cQ1*cQ2 + 3*self.m[2]*(self.m[1] + 3*self.m[2])*cQ2**2 + 9*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*cQ12**2 + 3*(self.m[1] + 2*self.m[2])**2*cQ1**2 - 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2]))), (6*self.b[2]*self.l1*(3*(self.m[1] + 2*self.m[2])*cQ12*cQ1 - 2*(self.m[1] + 3*self.m[2])*cQ2) + 6*self.l1*self.l2**2*self.m[2]*(3*self.m[2]*cQ12*cQ2 - 2*(self.m[1] + 2*self.m[2])*cQ1)*sQ12*Q[:, 5] + 2*self.l1*self.l2**2*self.m[2]*(-4*self.m[1] + 9*self.m[2]*cQ12**2 - 12*self.m[2])*sQ2*Q[:, 5])/(2*self.l1*self.l2*(-9*self.m[2]*(self.m[1] + 2*self.m[2])*cQ12*cQ1*cQ2 + 3*self.m[2]*(self.m[1] + 3*self.m[2])*cQ2**2 + 9*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*cQ12**2 + 3*(self.m[1] + 2*self.m[2])**2*cQ1**2 - 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2])))],
                                 [Z, 3*(-self.l1*self.l2*(3*self.m[2]*cQ12*cQ2 - 2*(self.m[1] + 2*self.m[2])*cQ1)*(-2*self.b[0]*Q[:, 3] + self.l1*self.m[1]*sQ1*Q[:, 4]**2 + 2*self.l1*self.m[2]*sQ1*Q[:, 4]**2 + self.l2*self.m[2]*sQ2*Q[:, 5]**2 + 2*U[:, 0]) - 3*self.l1*(-(self.m[1] + 2*self.m[2])*cQ1*cQ2 + 2*(self.m[0] + self.m[1] + self.m[2])*cQ12)*(2*self.b[2]*Q[:, 5] + self.g*self.l2*self.m[2]*sQ2 - self.l1*self.l2*self.m[2]*sQ12*Q[:, 4]**2) + self.l2*(4*self.m[0] + 4*self.m[1] + 3*self.m[2]*sQ2**2 + self.m[2])*(2*self.b[1]*Q[:, 4] + self.g*self.l1*self.m[1]*sQ1 + 2*self.g*self.l1*self.m[2]*sQ1 + self.l1*self.l2*self.m[2]*sQ12*Q[:, 5]**2))*(-9*self.m[2]*(self.m[1] + 2*self.m[2])*sQ12*cQ1*cQ2 - 9*self.m[2]*(self.m[1] + 2*self.m[2])*sQ1*cQ12*cQ2 + 18*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*sQ12*cQ12 + 6*(self.m[1] + 2*self.m[2])**2*sQ1*cQ1)/(2*self.l1**2*self.l2*(-9*self.m[2]*(self.m[1] + 2*self.m[2])*cQ12*cQ1*cQ2 + 3*self.m[2]*(self.m[1] + 3*self.m[2])*cQ2**2 + 9*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*cQ12**2 + 3*(self.m[1] + 2*self.m[2])**2*cQ1**2 - 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2]))**2) + 3*(3*self.l1**2*self.l2*self.m[2]*(-(self.m[1] + 2*self.m[2])*cQ1*cQ2 + 2*(self.m[0] + self.m[1] + self.m[2])*cQ12)*cQ12*Q[:, 4]**2 - self.l1*self.l2*(-3*self.m[2]*sQ12*cQ2 + 2*(self.m[1] + 2*self.m[2])*sQ1)*(-2*self.b[0]*Q[:, 3] + self.l1*self.m[1]*sQ1*Q[:, 4]**2 + 2*self.l1*self.m[2]*sQ1*Q[:, 4]**2 + self.l2*self.m[2]*sQ2*Q[:, 5]**2 + 2*U[:, 0]) - self.l1*self.l2*(3*self.m[2]*cQ12*cQ2 - 2*(self.m[1] + 2*self.m[2])*cQ1)*(self.l1*self.m[1]*cQ1*Q[:, 4]**2 + 2*self.l1*self.m[2]*cQ1*Q[:, 4]**2) - 3*self.l1*((self.m[1] + 2*self.m[2])*sQ1*cQ2 - 2*(self.m[0] + self.m[1] + self.m[2])*sQ12)*(2*self.b[2]*Q[:, 5] + self.g*self.l2*self.m[2]*sQ2 - self.l1*self.l2*self.m[2]*sQ12*Q[:, 4]**2) + self.l2*(self.g*self.l1*self.m[1]*cQ1 + 2*self.g*self.l1*self.m[2]*cQ1 + self.l1*self.l2*self.m[2]*cQ12*Q[:, 5]**2)*(4*self.m[0] + 4*self.m[1] + 3*self.m[2]*sQ2**2 + self.m[2]))/(2*self.l1**2*self.l2*(-9*self.m[2]*(self.m[1] + 2*self.m[2])*cQ12*cQ1*cQ2 + 3*self.m[2]*(self.m[1] + 3*self.m[2])*cQ2**2 + 9*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*cQ12**2 + 3*(self.m[1] + 2*self.m[2])**2*cQ1**2 - 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2]))), 3*(-self.l1*self.l2*(3*self.m[2]*cQ12*cQ2 - 2*(self.m[1] + 2*self.m[2])*cQ1)*(-2*self.b[0]*Q[:, 3] + self.l1*self.m[1]*sQ1*Q[:, 4]**2 + 2*self.l1*self.m[2]*sQ1*Q[:, 4]**2 + self.l2*self.m[2]*sQ2*Q[:, 5]**2 + 2*U[:, 0]) - 3*self.l1*(-(self.m[1] + 2*self.m[2])*cQ1*cQ2 + 2*(self.m[0] + self.m[1] + self.m[2])*cQ12)*(2*self.b[2]*Q[:, 5] + self.g*self.l2*self.m[2]*sQ2 - self.l1*self.l2*self.m[2]*sQ12*Q[:, 4]**2) + self.l2*(4*self.m[0] + 4*self.m[1] + 3*self.m[2]*sQ2**2 + self.m[2])*(2*self.b[1]*Q[:, 4] + self.g*self.l1*self.m[1]*sQ1 + 2*self.g*self.l1*self.m[2]*sQ1 + self.l1*self.l2*self.m[2]*sQ12*Q[:, 5]**2))*(9*self.m[2]*(self.m[1] + 2*self.m[2])*sQ12*cQ1*cQ2 - 9*self.m[2]*(self.m[1] + 2*self.m[2])*sQ2*cQ12*cQ1 + 6*self.m[2]*(self.m[1] + 3*self.m[2])*sQ2*cQ2 - 18*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*sQ12*cQ12)/(2*self.l1**2*self.l2*(-9*self.m[2]*(self.m[1] + 2*self.m[2])*cQ12*cQ1*cQ2 + 3*self.m[2]*(self.m[1] + 3*self.m[2])*cQ2**2 + 9*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*cQ12**2 + 3*(self.m[1] + 2*self.m[2])**2*cQ1**2 - 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2]))**2) + 3*(-self.l1*self.l2**2*self.m[2]*(3*self.m[2]*cQ12*cQ2 - 2*(self.m[1] + 2*self.m[2])*cQ1)*cQ2*Q[:, 5]**2 - self.l1*self.l2**2*self.m[2]*(4*self.m[0] + 4*self.m[1] + 3*self.m[2]*sQ2**2 + self.m[2])*cQ12*Q[:, 5]**2 - self.l1*self.l2*(3*self.m[2]*sQ12*cQ2 - 3*self.m[2]*sQ2*cQ12)*(-2*self.b[0]*Q[:, 3] + self.l1*self.m[1]*sQ1*Q[:, 4]**2 + 2*self.l1*self.m[2]*sQ1*Q[:, 4]**2 + self.l2*self.m[2]*sQ2*Q[:, 5]**2 + 2*U[:, 0]) - 3*self.l1*((self.m[1] + 2*self.m[2])*sQ2*cQ1 + 2*(self.m[0] + self.m[1] + self.m[2])*sQ12)*(2*self.b[2]*Q[:, 5] + self.g*self.l2*self.m[2]*sQ2 - self.l1*self.l2*self.m[2]*sQ12*Q[:, 4]**2) - 3*self.l1*(-(self.m[1] + 2*self.m[2])*cQ1*cQ2 + 2*(self.m[0] + self.m[1] + self.m[2])*cQ12)*(self.g*self.l2*self.m[2]*cQ2 + self.l1*self.l2*self.m[2]*cQ12*Q[:, 4]**2) + 6*self.l2*self.m[2]*(2*self.b[1]*Q[:, 4] + self.g*self.l1*self.m[1]*sQ1 + 2*self.g*self.l1*self.m[2]*sQ1 + self.l1*self.l2*self.m[2]*sQ12*Q[:, 5]**2)*sQ2*cQ2)/(2*self.l1**2*self.l2*(-9*self.m[2]*(self.m[1] + 2*self.m[2])*cQ12*cQ1*cQ2 + 3*self.m[2]*(self.m[1] + 3*self.m[2])*cQ2**2 + 9*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*cQ12**2 + 3*(self.m[1] + 2*self.m[2])**2*cQ1**2 - 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2]))), 3*self.b[0]*(3*self.m[2]*cQ12*cQ2 - 2*(self.m[1] + 2*self.m[2])*cQ1)/(self.l1*(-9*self.m[2]*(self.m[1] + 2*self.m[2])*cQ12*cQ1*cQ2 + 3*self.m[2]*(self.m[1] + 3*self.m[2])*cQ2**2 + 9*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*cQ12**2 + 3*(self.m[1] + 2*self.m[2])**2*cQ1**2 - 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2]))), 3*(2*self.b[1]*self.l2*(4*self.m[0] + 4*self.m[1] + 3*self.m[2]*sQ2**2 + self.m[2]) + 6*self.l1**2*self.l2*self.m[2]*(-(self.m[1] + 2*self.m[2])*cQ1*cQ2 + 2*(self.m[0] + self.m[1] + self.m[2])*cQ12)*sQ12*Q[:, 4] - self.l1*self.l2*(3*self.m[2]*cQ12*cQ2 - 2*(self.m[1] + 2*self.m[2])*cQ1)*(2*self.l1*self.m[1]*sQ1*Q[:, 4] + 4*self.l1*self.m[2]*sQ1*Q[:, 4]))/(2*self.l1**2*self.l2*(-9*self.m[2]*(self.m[1] + 2*self.m[2])*cQ12*cQ1*cQ2 + 3*self.m[2]*(self.m[1] + 3*self.m[2])*cQ2**2 + 9*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*cQ12**2 + 3*(self.m[1] + 2*self.m[2])**2*cQ1**2 - 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2]))), 3*(-6*self.b[2]*self.l1*(-(self.m[1] + 2*self.m[2])*cQ1*cQ2 + 2*(self.m[0] + self.m[1] + self.m[2])*cQ12) - 2*self.l1*self.l2**2*self.m[2]*(3*self.m[2]*cQ12*cQ2 - 2*(self.m[1] + 2*self.m[2])*cQ1)*sQ2*Q[:, 5] + 2*self.l1*self.l2**2*self.m[2]*(4*self.m[0] + 4*self.m[1] + 3*self.m[2]*sQ2**2 + self.m[2])*sQ12*Q[:, 5])/(2*self.l1**2*self.l2*(-9*self.m[2]*(self.m[1] + 2*self.m[2])*cQ12*cQ1*cQ2 + 3*self.m[2]*(self.m[1] + 3*self.m[2])*cQ2**2 + 9*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*cQ12**2 + 3*(self.m[1] + 2*self.m[2])**2*cQ1**2 - 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2])))],
                                 [Z, 3*(-self.l1*self.l2*self.m[2]*(3*(self.m[1] + 2*self.m[2])*cQ12*cQ1 - 2*(self.m[1] + 3*self.m[2])*cQ2)*(-2*self.b[0]*Q[:, 3] + self.l1*self.m[1]*sQ1*Q[:, 4]**2 + 2*self.l1*self.m[2]*sQ1*Q[:, 4]**2 + self.l2*self.m[2]*sQ2*Q[:, 5]**2 + 2*U[:, 0]) + self.l1*(-3*(self.m[1] + 2*self.m[2])**2*cQ1**2 + 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2]))*(2*self.b[2]*Q[:, 5] + self.g*self.l2*self.m[2]*sQ2 - self.l1*self.l2*self.m[2]*sQ12*Q[:, 4]**2) - 3*self.l2*self.m[2]*(-(self.m[1] + 2*self.m[2])*cQ1*cQ2 + 2*(self.m[0] + self.m[1] + self.m[2])*cQ12)*(2*self.b[1]*Q[:, 4] + self.g*self.l1*self.m[1]*sQ1 + 2*self.g*self.l1*self.m[2]*sQ1 + self.l1*self.l2*self.m[2]*sQ12*Q[:, 5]**2))*(-9*self.m[2]*(self.m[1] + 2*self.m[2])*sQ12*cQ1*cQ2 - 9*self.m[2]*(self.m[1] + 2*self.m[2])*sQ1*cQ12*cQ2 + 18*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*sQ12*cQ12 + 6*(self.m[1] + 2*self.m[2])**2*sQ1*cQ1)/(2*self.l1*self.l2**2*self.m[2]*(-9*self.m[2]*(self.m[1] + 2*self.m[2])*cQ12*cQ1*cQ2 + 3*self.m[2]*(self.m[1] + 3*self.m[2])*cQ2**2 + 9*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*cQ12**2 + 3*(self.m[1] + 2*self.m[2])**2*cQ1**2 - 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2]))**2) + 3*(-self.l1**2*self.l2*self.m[2]*(-3*(self.m[1] + 2*self.m[2])**2*cQ1**2 + 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2]))*cQ12*Q[:, 4]**2 - self.l1*self.l2*self.m[2]*(-3*(self.m[1] + 2*self.m[2])*sQ12*cQ1 - 3*(self.m[1] + 2*self.m[2])*sQ1*cQ12)*(-2*self.b[0]*Q[:, 3] + self.l1*self.m[1]*sQ1*Q[:, 4]**2 + 2*self.l1*self.m[2]*sQ1*Q[:, 4]**2 + self.l2*self.m[2]*sQ2*Q[:, 5]**2 + 2*U[:, 0]) - self.l1*self.l2*self.m[2]*(3*(self.m[1] + 2*self.m[2])*cQ12*cQ1 - 2*(self.m[1] + 3*self.m[2])*cQ2)*(self.l1*self.m[1]*cQ1*Q[:, 4]**2 + 2*self.l1*self.m[2]*cQ1*Q[:, 4]**2) + 6*self.l1*(self.m[1] + 2*self.m[2])**2*(2*self.b[2]*Q[:, 5] + self.g*self.l2*self.m[2]*sQ2 - self.l1*self.l2*self.m[2]*sQ12*Q[:, 4]**2)*sQ1*cQ1 - 3*self.l2*self.m[2]*((self.m[1] + 2*self.m[2])*sQ1*cQ2 - 2*(self.m[0] + self.m[1] + self.m[2])*sQ12)*(2*self.b[1]*Q[:, 4] + self.g*self.l1*self.m[1]*sQ1 + 2*self.g*self.l1*self.m[2]*sQ1 + self.l1*self.l2*self.m[2]*sQ12*Q[:, 5]**2) - 3*self.l2*self.m[2]*(-(self.m[1] + 2*self.m[2])*cQ1*cQ2 + 2*(self.m[0] + self.m[1] + self.m[2])*cQ12)*(self.g*self.l1*self.m[1]*cQ1 + 2*self.g*self.l1*self.m[2]*cQ1 + self.l1*self.l2*self.m[2]*cQ12*Q[:, 5]**2))/(2*self.l1*self.l2**2*self.m[2]*(-9*self.m[2]*(self.m[1] + 2*self.m[2])*cQ12*cQ1*cQ2 + 3*self.m[2]*(self.m[1] + 3*self.m[2])*cQ2**2 + 9*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*cQ12**2 + 3*(self.m[1] + 2*self.m[2])**2*cQ1**2 - 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2]))), 3*(-self.l1*self.l2*self.m[2]*(3*(self.m[1] + 2*self.m[2])*cQ12*cQ1 - 2*(self.m[1] + 3*self.m[2])*cQ2)*(-2*self.b[0]*Q[:, 3] + self.l1*self.m[1]*sQ1*Q[:, 4]**2 + 2*self.l1*self.m[2]*sQ1*Q[:, 4]**2 + self.l2*self.m[2]*sQ2*Q[:, 5]**2 + 2*U[:, 0]) + self.l1*(-3*(self.m[1] + 2*self.m[2])**2*cQ1**2 + 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2]))*(2*self.b[2]*Q[:, 5] + self.g*self.l2*self.m[2]*sQ2 - self.l1*self.l2*self.m[2]*sQ12*Q[:, 4]**2) - 3*self.l2*self.m[2]*(-(self.m[1] + 2*self.m[2])*cQ1*cQ2 + 2*(self.m[0] + self.m[1] + self.m[2])*cQ12)*(2*self.b[1]*Q[:, 4] + self.g*self.l1*self.m[1]*sQ1 + 2*self.g*self.l1*self.m[2]*sQ1 + self.l1*self.l2*self.m[2]*sQ12*Q[:, 5]**2))*(9*self.m[2]*(self.m[1] + 2*self.m[2])*sQ12*cQ1*cQ2 - 9*self.m[2]*(self.m[1] + 2*self.m[2])*sQ2*cQ12*cQ1 + 6*self.m[2]*(self.m[1] + 3*self.m[2])*sQ2*cQ2 - 18*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*sQ12*cQ12)/(2*self.l1*self.l2**2*self.m[2]*(-9*self.m[2]*(self.m[1] + 2*self.m[2])*cQ12*cQ1*cQ2 + 3*self.m[2]*(self.m[1] + 3*self.m[2])*cQ2**2 + 9*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*cQ12**2 + 3*(self.m[1] + 2*self.m[2])**2*cQ1**2 - 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2]))**2) + 3*(-self.l1*self.l2**2*self.m[2]**2*(3*(self.m[1] + 2*self.m[2])*cQ12*cQ1 - 2*(self.m[1] + 3*self.m[2])*cQ2)*cQ2*Q[:, 5]**2 + 3*self.l1*self.l2**2*self.m[2]**2*(-(self.m[1] + 2*self.m[2])*cQ1*cQ2 + 2*(self.m[0] + self.m[1] + self.m[2])*cQ12)*cQ12*Q[:, 5]**2 - self.l1*self.l2*self.m[2]*(3*(self.m[1] + 2*self.m[2])*sQ12*cQ1 + 2*(self.m[1] + 3*self.m[2])*sQ2)*(-2*self.b[0]*Q[:, 3] + self.l1*self.m[1]*sQ1*Q[:, 4]**2 + 2*self.l1*self.m[2]*sQ1*Q[:, 4]**2 + self.l2*self.m[2]*sQ2*Q[:, 5]**2 + 2*U[:, 0]) + self.l1*(-3*(self.m[1] + 2*self.m[2])**2*cQ1**2 + 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2]))*(self.g*self.l2*self.m[2]*cQ2 + self.l1*self.l2*self.m[2]*cQ12*Q[:, 4]**2) - 3*self.l2*self.m[2]*((self.m[1] + 2*self.m[2])*sQ2*cQ1 + 2*(self.m[0] + self.m[1] + self.m[2])*sQ12)*(2*self.b[1]*Q[:, 4] + self.g*self.l1*self.m[1]*sQ1 + 2*self.g*self.l1*self.m[2]*sQ1 + self.l1*self.l2*self.m[2]*sQ12*Q[:, 5]**2))/(2*self.l1*self.l2**2*self.m[2]*(-9*self.m[2]*(self.m[1] + 2*self.m[2])*cQ12*cQ1*cQ2 + 3*self.m[2]*(self.m[1] + 3*self.m[2])*cQ2**2 + 9*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*cQ12**2 + 3*(self.m[1] + 2*self.m[2])**2*cQ1**2 - 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2]))), 3*self.b[0]*(3*(self.m[1] + 2*self.m[2])*cQ12*cQ1 - 2*(self.m[1] + 3*self.m[2])*cQ2)/(self.l2*(-9*self.m[2]*(self.m[1] + 2*self.m[2])*cQ12*cQ1*cQ2 + 3*self.m[2]*(self.m[1] + 3*self.m[2])*cQ2**2 + 9*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*cQ12**2 + 3*(self.m[1] + 2*self.m[2])**2*cQ1**2 - 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2]))), 3*(-6*self.b[1]*self.l2*self.m[2]*(-(self.m[1] + 2*self.m[2])*cQ1*cQ2 + 2*(self.m[0] + self.m[1] + self.m[2])*cQ12) - 2*self.l1**2*self.l2*self.m[2]*(-3*(self.m[1] + 2*self.m[2])**2*cQ1**2 + 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2]))*sQ12*Q[:, 4] - self.l1*self.l2*self.m[2]*(3*(self.m[1] + 2*self.m[2])*cQ12*cQ1 - 2*(self.m[1] + 3*self.m[2])*cQ2)*(2*self.l1*self.m[1]*sQ1*Q[:, 4] + 4*self.l1*self.m[2]*sQ1*Q[:, 4]))/(2*self.l1*self.l2**2*self.m[2]*(-9*self.m[2]*(self.m[1] + 2*self.m[2])*cQ12*cQ1*cQ2 + 3*self.m[2]*(self.m[1] + 3*self.m[2])*cQ2**2 + 9*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*cQ12**2 + 3*(self.m[1] + 2*self.m[2])**2*cQ1**2 - 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2]))), 3*(2*self.b[2]*self.l1*(-3*(self.m[1] + 2*self.m[2])**2*cQ1**2 + 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2])) - 2*self.l1*self.l2**2*self.m[2]**2*(3*(self.m[1] + 2*self.m[2])*cQ12*cQ1 - 2*(self.m[1] + 3*self.m[2])*cQ2)*sQ2*Q[:, 5] - 6*self.l1*self.l2**2*self.m[2]**2*(-(self.m[1] + 2*self.m[2])*cQ1*cQ2 + 2*(self.m[0] + self.m[1] + self.m[2])*cQ12)*sQ12*Q[:, 5])/(2*self.l1*self.l2**2*self.m[2]*(-9*self.m[2]*(self.m[1] + 2*self.m[2])*cQ12*cQ1*cQ2 + 3*self.m[2]*(self.m[1] + 3*self.m[2])*cQ2**2 + 9*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*cQ12**2 + 3*(self.m[1] + 2*self.m[2])**2*cQ1**2 - 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2])))]]), 2),
                np.rollaxis(np.array([[Z], [Z], [Z], [(-4*self.m[1] + 9*self.m[2]*cQ12**2 - 12*self.m[2])/(-9*self.m[2]*(self.m[1] + 2*self.m[2])*cQ12*cQ1*cQ2 + 3*self.m[2]*(self.m[1] + 3*self.m[2])*cQ2**2 + 9*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*cQ12**2 + 3*(self.m[1] + 2*self.m[2])**2*cQ1**2 - 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2]))], [-3*(3*self.m[2]*cQ12*cQ2 - 2*(self.m[1] + 2*self.m[2])*cQ1)/(self.l1*(-9*self.m[2]*(self.m[1] + 2*self.m[2])*cQ12*cQ1*cQ2 + 3*self.m[2]*(self.m[1] + 3*self.m[2])*cQ2**2 + 9*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*cQ12**2 + 3*(self.m[1] + 2*self.m[2])**2*cQ1**2 - 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2])))], [-3*(3*(self.m[1] + 2*self.m[2])*cQ12*cQ1 - 2*(self.m[1] + 3*self.m[2])*cQ2)/(self.l2*(-9*self.m[2]*(self.m[1] + 2*self.m[2])*cQ12*cQ1*cQ2 + 3*self.m[2]*(self.m[1] + 3*self.m[2])*cQ2**2 + 9*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*cQ12**2 + 3*(self.m[1] + 2*self.m[2])**2*cQ1**2 - 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2])))]]), 2))

    def linearize(self, q, u):
        """
        Same as Linearize but simplified for a single (q, u) pair.

        q: array state
        u: scalar effort

        """
        # Memoize
        sq1, cq1 = np.sin(q[1]), np.cos(q[1])
        sq2, cq2 = np.sin(q[2]), np.cos(q[2])
        sq12, cq12 = np.sin(q[1] - q[2]), np.cos(q[1] - q[2])

        # Analytical Jacobian
        return (np.array([[0, 0, 0, 1, 0, 0],
                          [0, 0, 0, 0, 1, 0],
                          [0, 0, 0, 0, 0, 1],
                          [0, (self.l1*self.l2*(-4*self.m[1] + 9*self.m[2]*cq12**2 - 12*self.m[2])*(-2*self.b[0]*q[3] + self.l1*self.m[1]*sq1*q[4]**2 + 2*self.l1*self.m[2]*sq1*q[4]**2 + self.l2*self.m[2]*sq2*q[5]**2 + 2*u) + 3*self.l1*(3*(self.m[1] + 2*self.m[2])*cq12*cq1 - 2*(self.m[1] + 3*self.m[2])*cq2)*(2*self.b[2]*q[5] + self.g*self.l2*self.m[2]*sq2 - self.l1*self.l2*self.m[2]*sq12*q[4]**2) + 3*self.l2*(3*self.m[2]*cq12*cq2 - 2*(self.m[1] + 2*self.m[2])*cq1)*(2*self.b[1]*q[4] + self.g*self.l1*self.m[1]*sq1 + 2*self.g*self.l1*self.m[2]*sq1 + self.l1*self.l2*self.m[2]*sq12*q[5]**2))*(-9*self.m[2]*(self.m[1] + 2*self.m[2])*sq12*cq1*cq2 - 9*self.m[2]*(self.m[1] + 2*self.m[2])*sq1*cq12*cq2 + 18*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*sq12*cq12 + 6*(self.m[1] + 2*self.m[2])**2*sq1*cq1)/(2*self.l1*self.l2*(-9*self.m[2]*(self.m[1] + 2*self.m[2])*cq12*cq1*cq2 + 3*self.m[2]*(self.m[1] + 3*self.m[2])*cq2**2 + 9*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*cq12**2 + 3*(self.m[1] + 2*self.m[2])**2*cq1**2 - 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2]))**2) + (-3*self.l1**2*self.l2*self.m[2]*(3*(self.m[1] + 2*self.m[2])*cq12*cq1 - 2*(self.m[1] + 3*self.m[2])*cq2)*cq12*q[4]**2 - 18*self.l1*self.l2*self.m[2]*(-2*self.b[0]*q[3] + self.l1*self.m[1]*sq1*q[4]**2 + 2*self.l1*self.m[2]*sq1*q[4]**2 + self.l2*self.m[2]*sq2*q[5]**2 + 2*u)*sq12*cq12 + self.l1*self.l2*(self.l1*self.m[1]*cq1*q[4]**2 + 2*self.l1*self.m[2]*cq1*q[4]**2)*(-4*self.m[1] + 9*self.m[2]*cq12**2 - 12*self.m[2]) + 3*self.l1*(-3*(self.m[1] + 2*self.m[2])*sq12*cq1 - 3*(self.m[1] + 2*self.m[2])*sq1*cq12)*(2*self.b[2]*q[5] + self.g*self.l2*self.m[2]*sq2 - self.l1*self.l2*self.m[2]*sq12*q[4]**2) + 3*self.l2*(-3*self.m[2]*sq12*cq2 + 2*(self.m[1] + 2*self.m[2])*sq1)*(2*self.b[1]*q[4] + self.g*self.l1*self.m[1]*sq1 + 2*self.g*self.l1*self.m[2]*sq1 + self.l1*self.l2*self.m[2]*sq12*q[5]**2) + 3*self.l2*(3*self.m[2]*cq12*cq2 - 2*(self.m[1] + 2*self.m[2])*cq1)*(self.g*self.l1*self.m[1]*cq1 + 2*self.g*self.l1*self.m[2]*cq1 + self.l1*self.l2*self.m[2]*cq12*q[5]**2))/(2*self.l1*self.l2*(-9*self.m[2]*(self.m[1] + 2*self.m[2])*cq12*cq1*cq2 + 3*self.m[2]*(self.m[1] + 3*self.m[2])*cq2**2 + 9*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*cq12**2 + 3*(self.m[1] + 2*self.m[2])**2*cq1**2 - 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2]))), (self.l1*self.l2*(-4*self.m[1] + 9*self.m[2]*cq12**2 - 12*self.m[2])*(-2*self.b[0]*q[3] + self.l1*self.m[1]*sq1*q[4]**2 + 2*self.l1*self.m[2]*sq1*q[4]**2 + self.l2*self.m[2]*sq2*q[5]**2 + 2*u) + 3*self.l1*(3*(self.m[1] + 2*self.m[2])*cq12*cq1 - 2*(self.m[1] + 3*self.m[2])*cq2)*(2*self.b[2]*q[5] + self.g*self.l2*self.m[2]*sq2 - self.l1*self.l2*self.m[2]*sq12*q[4]**2) + 3*self.l2*(3*self.m[2]*cq12*cq2 - 2*(self.m[1] + 2*self.m[2])*cq1)*(2*self.b[1]*q[4] + self.g*self.l1*self.m[1]*sq1 + 2*self.g*self.l1*self.m[2]*sq1 + self.l1*self.l2*self.m[2]*sq12*q[5]**2))*(9*self.m[2]*(self.m[1] + 2*self.m[2])*sq12*cq1*cq2 - 9*self.m[2]*(self.m[1] + 2*self.m[2])*sq2*cq12*cq1 + 6*self.m[2]*(self.m[1] + 3*self.m[2])*sq2*cq2 - 18*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*sq12*cq12)/(2*self.l1*self.l2*(-9*self.m[2]*(self.m[1] + 2*self.m[2])*cq12*cq1*cq2 + 3*self.m[2]*(self.m[1] + 3*self.m[2])*cq2**2 + 9*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*cq12**2 + 3*(self.m[1] + 2*self.m[2])**2*cq1**2 - 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2]))**2) + (-3*self.l1*self.l2**2*self.m[2]*(3*self.m[2]*cq12*cq2 - 2*(self.m[1] + 2*self.m[2])*cq1)*cq12*q[5]**2 + self.l1*self.l2**2*self.m[2]*(-4*self.m[1] + 9*self.m[2]*cq12**2 - 12*self.m[2])*cq2*q[5]**2 + 18*self.l1*self.l2*self.m[2]*(-2*self.b[0]*q[3] + self.l1*self.m[1]*sq1*q[4]**2 + 2*self.l1*self.m[2]*sq1*q[4]**2 + self.l2*self.m[2]*sq2*q[5]**2 + 2*u)*sq12*cq12 + 3*self.l1*(3*(self.m[1] + 2*self.m[2])*sq12*cq1 + 2*(self.m[1] + 3*self.m[2])*sq2)*(2*self.b[2]*q[5] + self.g*self.l2*self.m[2]*sq2 - self.l1*self.l2*self.m[2]*sq12*q[4]**2) + 3*self.l1*(3*(self.m[1] + 2*self.m[2])*cq12*cq1 - 2*(self.m[1] + 3*self.m[2])*cq2)*(self.g*self.l2*self.m[2]*cq2 + self.l1*self.l2*self.m[2]*cq12*q[4]**2) + 3*self.l2*(3*self.m[2]*sq12*cq2 - 3*self.m[2]*sq2*cq12)*(2*self.b[1]*q[4] + self.g*self.l1*self.m[1]*sq1 + 2*self.g*self.l1*self.m[2]*sq1 + self.l1*self.l2*self.m[2]*sq12*q[5]**2))/(2*self.l1*self.l2*(-9*self.m[2]*(self.m[1] + 2*self.m[2])*cq12*cq1*cq2 + 3*self.m[2]*(self.m[1] + 3*self.m[2])*cq2**2 + 9*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*cq12**2 + 3*(self.m[1] + 2*self.m[2])**2*cq1**2 - 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2]))), -self.b[0]*(-4*self.m[1] + 9*self.m[2]*cq12**2 - 12*self.m[2])/(-9*self.m[2]*(self.m[1] + 2*self.m[2])*cq12*cq1*cq2 + 3*self.m[2]*(self.m[1] + 3*self.m[2])*cq2**2 + 9*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*cq12**2 + 3*(self.m[1] + 2*self.m[2])**2*cq1**2 - 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2])), (6*self.b[1]*self.l2*(3*self.m[2]*cq12*cq2 - 2*(self.m[1] + 2*self.m[2])*cq1) - 6*self.l1**2*self.l2*self.m[2]*(3*(self.m[1] + 2*self.m[2])*cq12*cq1 - 2*(self.m[1] + 3*self.m[2])*cq2)*sq12*q[4] + self.l1*self.l2*(2*self.l1*self.m[1]*sq1*q[4] + 4*self.l1*self.m[2]*sq1*q[4])*(-4*self.m[1] + 9*self.m[2]*cq12**2 - 12*self.m[2]))/(2*self.l1*self.l2*(-9*self.m[2]*(self.m[1] + 2*self.m[2])*cq12*cq1*cq2 + 3*self.m[2]*(self.m[1] + 3*self.m[2])*cq2**2 + 9*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*cq12**2 + 3*(self.m[1] + 2*self.m[2])**2*cq1**2 - 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2]))), (6*self.b[2]*self.l1*(3*(self.m[1] + 2*self.m[2])*cq12*cq1 - 2*(self.m[1] + 3*self.m[2])*cq2) + 6*self.l1*self.l2**2*self.m[2]*(3*self.m[2]*cq12*cq2 - 2*(self.m[1] + 2*self.m[2])*cq1)*sq12*q[5] + 2*self.l1*self.l2**2*self.m[2]*(-4*self.m[1] + 9*self.m[2]*cq12**2 - 12*self.m[2])*sq2*q[5])/(2*self.l1*self.l2*(-9*self.m[2]*(self.m[1] + 2*self.m[2])*cq12*cq1*cq2 + 3*self.m[2]*(self.m[1] + 3*self.m[2])*cq2**2 + 9*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*cq12**2 + 3*(self.m[1] + 2*self.m[2])**2*cq1**2 - 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2])))],
                          [0, 3*(-self.l1*self.l2*(3*self.m[2]*cq12*cq2 - 2*(self.m[1] + 2*self.m[2])*cq1)*(-2*self.b[0]*q[3] + self.l1*self.m[1]*sq1*q[4]**2 + 2*self.l1*self.m[2]*sq1*q[4]**2 + self.l2*self.m[2]*sq2*q[5]**2 + 2*u) - 3*self.l1*(-(self.m[1] + 2*self.m[2])*cq1*cq2 + 2*(self.m[0] + self.m[1] + self.m[2])*cq12)*(2*self.b[2]*q[5] + self.g*self.l2*self.m[2]*sq2 - self.l1*self.l2*self.m[2]*sq12*q[4]**2) + self.l2*(4*self.m[0] + 4*self.m[1] + 3*self.m[2]*sq2**2 + self.m[2])*(2*self.b[1]*q[4] + self.g*self.l1*self.m[1]*sq1 + 2*self.g*self.l1*self.m[2]*sq1 + self.l1*self.l2*self.m[2]*sq12*q[5]**2))*(-9*self.m[2]*(self.m[1] + 2*self.m[2])*sq12*cq1*cq2 - 9*self.m[2]*(self.m[1] + 2*self.m[2])*sq1*cq12*cq2 + 18*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*sq12*cq12 + 6*(self.m[1] + 2*self.m[2])**2*sq1*cq1)/(2*self.l1**2*self.l2*(-9*self.m[2]*(self.m[1] + 2*self.m[2])*cq12*cq1*cq2 + 3*self.m[2]*(self.m[1] + 3*self.m[2])*cq2**2 + 9*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*cq12**2 + 3*(self.m[1] + 2*self.m[2])**2*cq1**2 - 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2]))**2) + 3*(3*self.l1**2*self.l2*self.m[2]*(-(self.m[1] + 2*self.m[2])*cq1*cq2 + 2*(self.m[0] + self.m[1] + self.m[2])*cq12)*cq12*q[4]**2 - self.l1*self.l2*(-3*self.m[2]*sq12*cq2 + 2*(self.m[1] + 2*self.m[2])*sq1)*(-2*self.b[0]*q[3] + self.l1*self.m[1]*sq1*q[4]**2 + 2*self.l1*self.m[2]*sq1*q[4]**2 + self.l2*self.m[2]*sq2*q[5]**2 + 2*u) - self.l1*self.l2*(3*self.m[2]*cq12*cq2 - 2*(self.m[1] + 2*self.m[2])*cq1)*(self.l1*self.m[1]*cq1*q[4]**2 + 2*self.l1*self.m[2]*cq1*q[4]**2) - 3*self.l1*((self.m[1] + 2*self.m[2])*sq1*cq2 - 2*(self.m[0] + self.m[1] + self.m[2])*sq12)*(2*self.b[2]*q[5] + self.g*self.l2*self.m[2]*sq2 - self.l1*self.l2*self.m[2]*sq12*q[4]**2) + self.l2*(self.g*self.l1*self.m[1]*cq1 + 2*self.g*self.l1*self.m[2]*cq1 + self.l1*self.l2*self.m[2]*cq12*q[5]**2)*(4*self.m[0] + 4*self.m[1] + 3*self.m[2]*sq2**2 + self.m[2]))/(2*self.l1**2*self.l2*(-9*self.m[2]*(self.m[1] + 2*self.m[2])*cq12*cq1*cq2 + 3*self.m[2]*(self.m[1] + 3*self.m[2])*cq2**2 + 9*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*cq12**2 + 3*(self.m[1] + 2*self.m[2])**2*cq1**2 - 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2]))), 3*(-self.l1*self.l2*(3*self.m[2]*cq12*cq2 - 2*(self.m[1] + 2*self.m[2])*cq1)*(-2*self.b[0]*q[3] + self.l1*self.m[1]*sq1*q[4]**2 + 2*self.l1*self.m[2]*sq1*q[4]**2 + self.l2*self.m[2]*sq2*q[5]**2 + 2*u) - 3*self.l1*(-(self.m[1] + 2*self.m[2])*cq1*cq2 + 2*(self.m[0] + self.m[1] + self.m[2])*cq12)*(2*self.b[2]*q[5] + self.g*self.l2*self.m[2]*sq2 - self.l1*self.l2*self.m[2]*sq12*q[4]**2) + self.l2*(4*self.m[0] + 4*self.m[1] + 3*self.m[2]*sq2**2 + self.m[2])*(2*self.b[1]*q[4] + self.g*self.l1*self.m[1]*sq1 + 2*self.g*self.l1*self.m[2]*sq1 + self.l1*self.l2*self.m[2]*sq12*q[5]**2))*(9*self.m[2]*(self.m[1] + 2*self.m[2])*sq12*cq1*cq2 - 9*self.m[2]*(self.m[1] + 2*self.m[2])*sq2*cq12*cq1 + 6*self.m[2]*(self.m[1] + 3*self.m[2])*sq2*cq2 - 18*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*sq12*cq12)/(2*self.l1**2*self.l2*(-9*self.m[2]*(self.m[1] + 2*self.m[2])*cq12*cq1*cq2 + 3*self.m[2]*(self.m[1] + 3*self.m[2])*cq2**2 + 9*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*cq12**2 + 3*(self.m[1] + 2*self.m[2])**2*cq1**2 - 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2]))**2) + 3*(-self.l1*self.l2**2*self.m[2]*(3*self.m[2]*cq12*cq2 - 2*(self.m[1] + 2*self.m[2])*cq1)*cq2*q[5]**2 - self.l1*self.l2**2*self.m[2]*(4*self.m[0] + 4*self.m[1] + 3*self.m[2]*sq2**2 + self.m[2])*cq12*q[5]**2 - self.l1*self.l2*(3*self.m[2]*sq12*cq2 - 3*self.m[2]*sq2*cq12)*(-2*self.b[0]*q[3] + self.l1*self.m[1]*sq1*q[4]**2 + 2*self.l1*self.m[2]*sq1*q[4]**2 + self.l2*self.m[2]*sq2*q[5]**2 + 2*u) - 3*self.l1*((self.m[1] + 2*self.m[2])*sq2*cq1 + 2*(self.m[0] + self.m[1] + self.m[2])*sq12)*(2*self.b[2]*q[5] + self.g*self.l2*self.m[2]*sq2 - self.l1*self.l2*self.m[2]*sq12*q[4]**2) - 3*self.l1*(-(self.m[1] + 2*self.m[2])*cq1*cq2 + 2*(self.m[0] + self.m[1] + self.m[2])*cq12)*(self.g*self.l2*self.m[2]*cq2 + self.l1*self.l2*self.m[2]*cq12*q[4]**2) + 6*self.l2*self.m[2]*(2*self.b[1]*q[4] + self.g*self.l1*self.m[1]*sq1 + 2*self.g*self.l1*self.m[2]*sq1 + self.l1*self.l2*self.m[2]*sq12*q[5]**2)*sq2*cq2)/(2*self.l1**2*self.l2*(-9*self.m[2]*(self.m[1] + 2*self.m[2])*cq12*cq1*cq2 + 3*self.m[2]*(self.m[1] + 3*self.m[2])*cq2**2 + 9*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*cq12**2 + 3*(self.m[1] + 2*self.m[2])**2*cq1**2 - 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2]))), 3*self.b[0]*(3*self.m[2]*cq12*cq2 - 2*(self.m[1] + 2*self.m[2])*cq1)/(self.l1*(-9*self.m[2]*(self.m[1] + 2*self.m[2])*cq12*cq1*cq2 + 3*self.m[2]*(self.m[1] + 3*self.m[2])*cq2**2 + 9*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*cq12**2 + 3*(self.m[1] + 2*self.m[2])**2*cq1**2 - 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2]))), 3*(2*self.b[1]*self.l2*(4*self.m[0] + 4*self.m[1] + 3*self.m[2]*sq2**2 + self.m[2]) + 6*self.l1**2*self.l2*self.m[2]*(-(self.m[1] + 2*self.m[2])*cq1*cq2 + 2*(self.m[0] + self.m[1] + self.m[2])*cq12)*sq12*q[4] - self.l1*self.l2*(3*self.m[2]*cq12*cq2 - 2*(self.m[1] + 2*self.m[2])*cq1)*(2*self.l1*self.m[1]*sq1*q[4] + 4*self.l1*self.m[2]*sq1*q[4]))/(2*self.l1**2*self.l2*(-9*self.m[2]*(self.m[1] + 2*self.m[2])*cq12*cq1*cq2 + 3*self.m[2]*(self.m[1] + 3*self.m[2])*cq2**2 + 9*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*cq12**2 + 3*(self.m[1] + 2*self.m[2])**2*cq1**2 - 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2]))), 3*(-6*self.b[2]*self.l1*(-(self.m[1] + 2*self.m[2])*cq1*cq2 + 2*(self.m[0] + self.m[1] + self.m[2])*cq12) - 2*self.l1*self.l2**2*self.m[2]*(3*self.m[2]*cq12*cq2 - 2*(self.m[1] + 2*self.m[2])*cq1)*sq2*q[5] + 2*self.l1*self.l2**2*self.m[2]*(4*self.m[0] + 4*self.m[1] + 3*self.m[2]*sq2**2 + self.m[2])*sq12*q[5])/(2*self.l1**2*self.l2*(-9*self.m[2]*(self.m[1] + 2*self.m[2])*cq12*cq1*cq2 + 3*self.m[2]*(self.m[1] + 3*self.m[2])*cq2**2 + 9*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*cq12**2 + 3*(self.m[1] + 2*self.m[2])**2*cq1**2 - 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2])))],
                          [0, 3*(-self.l1*self.l2*self.m[2]*(3*(self.m[1] + 2*self.m[2])*cq12*cq1 - 2*(self.m[1] + 3*self.m[2])*cq2)*(-2*self.b[0]*q[3] + self.l1*self.m[1]*sq1*q[4]**2 + 2*self.l1*self.m[2]*sq1*q[4]**2 + self.l2*self.m[2]*sq2*q[5]**2 + 2*u) + self.l1*(-3*(self.m[1] + 2*self.m[2])**2*cq1**2 + 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2]))*(2*self.b[2]*q[5] + self.g*self.l2*self.m[2]*sq2 - self.l1*self.l2*self.m[2]*sq12*q[4]**2) - 3*self.l2*self.m[2]*(-(self.m[1] + 2*self.m[2])*cq1*cq2 + 2*(self.m[0] + self.m[1] + self.m[2])*cq12)*(2*self.b[1]*q[4] + self.g*self.l1*self.m[1]*sq1 + 2*self.g*self.l1*self.m[2]*sq1 + self.l1*self.l2*self.m[2]*sq12*q[5]**2))*(-9*self.m[2]*(self.m[1] + 2*self.m[2])*sq12*cq1*cq2 - 9*self.m[2]*(self.m[1] + 2*self.m[2])*sq1*cq12*cq2 + 18*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*sq12*cq12 + 6*(self.m[1] + 2*self.m[2])**2*sq1*cq1)/(2*self.l1*self.l2**2*self.m[2]*(-9*self.m[2]*(self.m[1] + 2*self.m[2])*cq12*cq1*cq2 + 3*self.m[2]*(self.m[1] + 3*self.m[2])*cq2**2 + 9*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*cq12**2 + 3*(self.m[1] + 2*self.m[2])**2*cq1**2 - 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2]))**2) + 3*(-self.l1**2*self.l2*self.m[2]*(-3*(self.m[1] + 2*self.m[2])**2*cq1**2 + 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2]))*cq12*q[4]**2 - self.l1*self.l2*self.m[2]*(-3*(self.m[1] + 2*self.m[2])*sq12*cq1 - 3*(self.m[1] + 2*self.m[2])*sq1*cq12)*(-2*self.b[0]*q[3] + self.l1*self.m[1]*sq1*q[4]**2 + 2*self.l1*self.m[2]*sq1*q[4]**2 + self.l2*self.m[2]*sq2*q[5]**2 + 2*u) - self.l1*self.l2*self.m[2]*(3*(self.m[1] + 2*self.m[2])*cq12*cq1 - 2*(self.m[1] + 3*self.m[2])*cq2)*(self.l1*self.m[1]*cq1*q[4]**2 + 2*self.l1*self.m[2]*cq1*q[4]**2) + 6*self.l1*(self.m[1] + 2*self.m[2])**2*(2*self.b[2]*q[5] + self.g*self.l2*self.m[2]*sq2 - self.l1*self.l2*self.m[2]*sq12*q[4]**2)*sq1*cq1 - 3*self.l2*self.m[2]*((self.m[1] + 2*self.m[2])*sq1*cq2 - 2*(self.m[0] + self.m[1] + self.m[2])*sq12)*(2*self.b[1]*q[4] + self.g*self.l1*self.m[1]*sq1 + 2*self.g*self.l1*self.m[2]*sq1 + self.l1*self.l2*self.m[2]*sq12*q[5]**2) - 3*self.l2*self.m[2]*(-(self.m[1] + 2*self.m[2])*cq1*cq2 + 2*(self.m[0] + self.m[1] + self.m[2])*cq12)*(self.g*self.l1*self.m[1]*cq1 + 2*self.g*self.l1*self.m[2]*cq1 + self.l1*self.l2*self.m[2]*cq12*q[5]**2))/(2*self.l1*self.l2**2*self.m[2]*(-9*self.m[2]*(self.m[1] + 2*self.m[2])*cq12*cq1*cq2 + 3*self.m[2]*(self.m[1] + 3*self.m[2])*cq2**2 + 9*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*cq12**2 + 3*(self.m[1] + 2*self.m[2])**2*cq1**2 - 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2]))), 3*(-self.l1*self.l2*self.m[2]*(3*(self.m[1] + 2*self.m[2])*cq12*cq1 - 2*(self.m[1] + 3*self.m[2])*cq2)*(-2*self.b[0]*q[3] + self.l1*self.m[1]*sq1*q[4]**2 + 2*self.l1*self.m[2]*sq1*q[4]**2 + self.l2*self.m[2]*sq2*q[5]**2 + 2*u) + self.l1*(-3*(self.m[1] + 2*self.m[2])**2*cq1**2 + 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2]))*(2*self.b[2]*q[5] + self.g*self.l2*self.m[2]*sq2 - self.l1*self.l2*self.m[2]*sq12*q[4]**2) - 3*self.l2*self.m[2]*(-(self.m[1] + 2*self.m[2])*cq1*cq2 + 2*(self.m[0] + self.m[1] + self.m[2])*cq12)*(2*self.b[1]*q[4] + self.g*self.l1*self.m[1]*sq1 + 2*self.g*self.l1*self.m[2]*sq1 + self.l1*self.l2*self.m[2]*sq12*q[5]**2))*(9*self.m[2]*(self.m[1] + 2*self.m[2])*sq12*cq1*cq2 - 9*self.m[2]*(self.m[1] + 2*self.m[2])*sq2*cq12*cq1 + 6*self.m[2]*(self.m[1] + 3*self.m[2])*sq2*cq2 - 18*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*sq12*cq12)/(2*self.l1*self.l2**2*self.m[2]*(-9*self.m[2]*(self.m[1] + 2*self.m[2])*cq12*cq1*cq2 + 3*self.m[2]*(self.m[1] + 3*self.m[2])*cq2**2 + 9*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*cq12**2 + 3*(self.m[1] + 2*self.m[2])**2*cq1**2 - 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2]))**2) + 3*(-self.l1*self.l2**2*self.m[2]**2*(3*(self.m[1] + 2*self.m[2])*cq12*cq1 - 2*(self.m[1] + 3*self.m[2])*cq2)*cq2*q[5]**2 + 3*self.l1*self.l2**2*self.m[2]**2*(-(self.m[1] + 2*self.m[2])*cq1*cq2 + 2*(self.m[0] + self.m[1] + self.m[2])*cq12)*cq12*q[5]**2 - self.l1*self.l2*self.m[2]*(3*(self.m[1] + 2*self.m[2])*sq12*cq1 + 2*(self.m[1] + 3*self.m[2])*sq2)*(-2*self.b[0]*q[3] + self.l1*self.m[1]*sq1*q[4]**2 + 2*self.l1*self.m[2]*sq1*q[4]**2 + self.l2*self.m[2]*sq2*q[5]**2 + 2*u) + self.l1*(-3*(self.m[1] + 2*self.m[2])**2*cq1**2 + 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2]))*(self.g*self.l2*self.m[2]*cq2 + self.l1*self.l2*self.m[2]*cq12*q[4]**2) - 3*self.l2*self.m[2]*((self.m[1] + 2*self.m[2])*sq2*cq1 + 2*(self.m[0] + self.m[1] + self.m[2])*sq12)*(2*self.b[1]*q[4] + self.g*self.l1*self.m[1]*sq1 + 2*self.g*self.l1*self.m[2]*sq1 + self.l1*self.l2*self.m[2]*sq12*q[5]**2))/(2*self.l1*self.l2**2*self.m[2]*(-9*self.m[2]*(self.m[1] + 2*self.m[2])*cq12*cq1*cq2 + 3*self.m[2]*(self.m[1] + 3*self.m[2])*cq2**2 + 9*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*cq12**2 + 3*(self.m[1] + 2*self.m[2])**2*cq1**2 - 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2]))), 3*self.b[0]*(3*(self.m[1] + 2*self.m[2])*cq12*cq1 - 2*(self.m[1] + 3*self.m[2])*cq2)/(self.l2*(-9*self.m[2]*(self.m[1] + 2*self.m[2])*cq12*cq1*cq2 + 3*self.m[2]*(self.m[1] + 3*self.m[2])*cq2**2 + 9*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*cq12**2 + 3*(self.m[1] + 2*self.m[2])**2*cq1**2 - 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2]))), 3*(-6*self.b[1]*self.l2*self.m[2]*(-(self.m[1] + 2*self.m[2])*cq1*cq2 + 2*(self.m[0] + self.m[1] + self.m[2])*cq12) - 2*self.l1**2*self.l2*self.m[2]*(-3*(self.m[1] + 2*self.m[2])**2*cq1**2 + 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2]))*sq12*q[4] - self.l1*self.l2*self.m[2]*(3*(self.m[1] + 2*self.m[2])*cq12*cq1 - 2*(self.m[1] + 3*self.m[2])*cq2)*(2*self.l1*self.m[1]*sq1*q[4] + 4*self.l1*self.m[2]*sq1*q[4]))/(2*self.l1*self.l2**2*self.m[2]*(-9*self.m[2]*(self.m[1] + 2*self.m[2])*cq12*cq1*cq2 + 3*self.m[2]*(self.m[1] + 3*self.m[2])*cq2**2 + 9*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*cq12**2 + 3*(self.m[1] + 2*self.m[2])**2*cq1**2 - 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2]))), 3*(2*self.b[2]*self.l1*(-3*(self.m[1] + 2*self.m[2])**2*cq1**2 + 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2])) - 2*self.l1*self.l2**2*self.m[2]**2*(3*(self.m[1] + 2*self.m[2])*cq12*cq1 - 2*(self.m[1] + 3*self.m[2])*cq2)*sq2*q[5] - 6*self.l1*self.l2**2*self.m[2]**2*(-(self.m[1] + 2*self.m[2])*cq1*cq2 + 2*(self.m[0] + self.m[1] + self.m[2])*cq12)*sq12*q[5])/(2*self.l1*self.l2**2*self.m[2]*(-9*self.m[2]*(self.m[1] + 2*self.m[2])*cq12*cq1*cq2 + 3*self.m[2]*(self.m[1] + 3*self.m[2])*cq2**2 + 9*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*cq12**2 + 3*(self.m[1] + 2*self.m[2])**2*cq1**2 - 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2])))]]),
                np.array([[0], [0], [0], [(-4*self.m[1] + 9*self.m[2]*cq12**2 - 12*self.m[2])/(-9*self.m[2]*(self.m[1] + 2*self.m[2])*cq12*cq1*cq2 + 3*self.m[2]*(self.m[1] + 3*self.m[2])*cq2**2 + 9*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*cq12**2 + 3*(self.m[1] + 2*self.m[2])**2*cq1**2 - 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2]))], [-3*(3*self.m[2]*cq12*cq2 - 2*(self.m[1] + 2*self.m[2])*cq1)/(self.l1*(-9*self.m[2]*(self.m[1] + 2*self.m[2])*cq12*cq1*cq2 + 3*self.m[2]*(self.m[1] + 3*self.m[2])*cq2**2 + 9*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*cq12**2 + 3*(self.m[1] + 2*self.m[2])**2*cq1**2 - 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2])))], [-3*(3*(self.m[1] + 2*self.m[2])*cq12*cq1 - 2*(self.m[1] + 3*self.m[2])*cq2)/(self.l2*(-9*self.m[2]*(self.m[1] + 2*self.m[2])*cq12*cq1*cq2 + 3*self.m[2]*(self.m[1] + 3*self.m[2])*cq2**2 + 9*self.m[2]*(self.m[0] + self.m[1] + self.m[2])*cq12**2 + 3*(self.m[1] + 2*self.m[2])**2*cq1**2 - 4*(self.m[1] + 3*self.m[2])*(self.m[0] + self.m[1] + self.m[2])))]]))
